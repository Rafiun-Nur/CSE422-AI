# -*- coding: utf-8 -*-
"""Untitled67.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x_D2G6oOz5Q1zUOWwPjQZR9bIJexyQ6n
"""

#Assignment-4
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix, roc_auc_score, roc_curve
file_object = open('Heart Disease.csv', 'r')
data = pd.read_csv(file_object)
print("Columns:", data.columns)
if("gender" in data.columns):
    le = LabelEncoder()
    data["gender"] = le.fit_transform(data["gender"])
X = data.iloc[:, :-1]
y = data.iloc[:, -1]
imputer = SimpleImputer(strategy='mean')
x_imputed = imputer.fit_transform(X)
scaler = StandardScaler()
x_scaled = scaler.fit_transform(x_imputed)
x_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2, random_state=42)
model = LogisticRegression()
model.fit(x_train, y_train)
predictions = model.predict(x_test)
print("Predictions:\n", predictions)
acc = accuracy_score(y_test, predictions)
print("Accuracy:", acc)
print("\nClassification Report:\n", classification_report(y_test, predictions))
cm = confusion_matrix(y_test, predictions)
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues")
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()
y_probs = model.predict_proba(x_test)[:, 1]
fpr, tpr, thresholds = roc_curve(y_test, y_probs)
plt.plot(fpr, tpr, label='Logistic Regression')
plt.plot([0, 1], [0, 1], linestyle='--')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC Curve')
plt.legend()
plt.show()
print("ROC AUC Score:", roc_auc_score(y_test, y_probs))